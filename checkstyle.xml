<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
	Checkstyle configuration that checks for:
		- the Java Language Specification at
		  http://java.sun.com/docs/books/jls/second_edition/html/index.html
	    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
	    - the Javadoc guidelines at
    	  http://java.sun.com/j2se/javadoc/writingdoccomments/index.html
	    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html
	    - some best practices
-->

<module name="Checker">

	<property name="severity" value="warning"/>

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <module name="JavadocPackage">
		<property name="severity" value="info"/>
	</module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation">
		<property name="severity" value="error"/>
	</module>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>
    
    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
			<property name="severity" value="info"/>
		</module>
        <module name="JavadocType" />
        <module name="JavadocVariable">
			<property name="severity" value="info"/>
		</module>
        <module name="JavadocStyle"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
			<property name="max" value="120"/>
		</module>
        <module name="MethodLength">
			<property name="severity" value="error"/>
		</module>
        <module name="ParameterNumber">
			<property name="severity" value="error"/>
		</module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals"/>
        <!--<module name="DoubleCheckedLocking"/>    &lt;!&ndash; MY FAVOURITE &ndash;&gt;-->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode">
			<property name="severity" value="error"/>
		</module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters" />
        <module name="TodoComment"/>
        <module name="UpperEll"/>

		<!-- Require simple boolean expressions -->
		<module name="SimplifyBooleanExpression"/>


		<!-- Capture string compare using == -->
		<module name="StringLiteralEquality">
			<property name="severity" value="error"/>
		</module>

		<!-- Checks that an overriding clone() method invokes super.clone() -->
		<module name="SuperClone"/>

		<!-- Checks that an overriding finalize() method invokes -->
		<!-- super.finalize()                                    -->
		<module name="SuperFinalize"/>

		<!-- Require all classes to be in a package -->
		<module name="PackageDeclaration"/>

		<!-- Enforce the following declaration order:
			1. Class variables
			2. Instance variables
			3. Constructors
			4. Methods
		-->
		<module name="DeclarationOrder"/>

		<!-- Disallow parameter assignment -->
		<module name="ParameterAssignment"/>

		<!-- Ensure the default clause is the last case in a switch -->
		<module name="DefaultComesLast">
			<property name="severity" value="error"/>
		</module>

		<!-- Disallow non-commented switch fall through -->
		<module name="FallThrough">
			<property name="severity" value="error"/>
		</module>

		<!-- Avoid unnecessary parentheses -->
		<module name="UnnecessaryParentheses"/>

		<!-- Class with private constructor must be final -->
		<module name="FinalClass"/>

		<!-- Ensures that exception classes are immutable -->
		<module name="MutableException"/>

		<!-- Flag overly complex constructions -->
		<module name="ClassFanOutComplexity"/>
		<module name="CyclomaticComplexity">
			<property name="max" value="10"/>
		</module>
		<module name="NPathComplexity"/>

		<!-- Identify TODOs -->
		<module name="TodoComment">
			<property name="format" value="TODO"/>
		</module>

    </module>

</module>
